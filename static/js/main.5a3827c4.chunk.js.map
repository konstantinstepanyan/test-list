{"version":3,"sources":["context.js","todo/TodoItem.js","todo/TodoList.js","loader.js","modal/modal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChangeItem","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","onChange","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","onToggle","Modal","state","isOpen","Fragment","setState","this","Component","AddTodo","lazy","App","useState","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","value","filter","Suspense","fallback","onCreate","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3827c4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\n\n\nconst styles={\n    li: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '.5rem 1rem',\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        marginBottom: '.5rem'\n    },\n    input: {\n        marginRight: '1rem'\n    }\n}\n\nfunction TodoItem({todo, index, onChangeItem}) {\n    const {removeTodo} = useContext(Context);\n    \n    const classes = [];\n    \n    if(todo.completed){\n        classes.push('done');\n    }\n    \n    return (\n    \n    \n        <li style={styles.li}>\n        \n        <span className={classes.join(' ')}>\n            <input \n            type=\"checkbox\" \n            checked={todo.completed}\n            style={styles.input} \n            onChange={() => onChangeItem(todo.id)}\n            />\n            <strong>{index + 1}.</strong>\n            &nbsp;\n            {todo.title}\n        \n        </span>\n        \n        <button className='rm' onClick={() => removeTodo(todo.id)}>&times;</button>\n        \n        </li>\n    )\n}\n\n\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    index: PropTypes.number,\n    onChangeItem: PropTypes.func.isRequired\n}\n\nexport default TodoItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst styles = {\n    ul: {\n        listStyle: 'none',\n        margin: 0,\n        padding: 0\n    }\n}\n\nfunction TodoList(props) {\n    \n    \n    \n    return (\n    \n        <ul style={styles.ul}>\n            {\n                props.todos.map((todo, index) => {\n                    return <TodoItem todo={todo} key={todo.id} index={index}\n                    onChangeItem={props.onToggle}    />\n                })\n            }\n        </ul>\n    \n    )\n}\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onToggle: PropTypes.func.isRequired\n}\n\nexport default TodoList; ","import React from 'react';\r\n\r\nexport default () => <div style={{display: 'flex', justifyContent: 'center', margin: '5rem'}}><div className=\"lds-dual-ring\"></div></div>","import React from 'react';\r\nimport './modal.scss';\r\n\r\nexport default class Modal extends React.Component {\r\n    \r\n    state = {\r\n        isOpen: false\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={()=> this.setState({isOpen: true})}>Open modal</button>\r\n            \r\n                {this.state.isOpen && (\r\n            \r\n                <div className='modal'>\r\n                        <div className=\"modal-body\">\r\n                            <h1 className=\"modal__title\"> Modal title</h1>\r\n                            <p className=\"modal__p\">I am awesome modal!</p>\r\n                            <button className=\"modal__close\" onClick={()=> this.setState({isOpen: false})}>Close modal</button>\r\n                        </div>\r\n                    </div>\r\n            \r\n            )}\r\n            \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\nimport TodoList from './todo/TodoList';\nimport Loader from './loader';\nimport Context from './context';\nimport Modal from './modal/modal'\n\nconst AddTodo = React.lazy(() => import('./todo/AddTodo'));\n\n//\n//const AddTodo = React.lazy(() => new Promise(resolve => {\n//    setTimeout(()=>{resolve(import('./todo/AddTodo'))}, 3000);\n//}));\n\n\nfunction App() {\n    \n    const [todos, setTodos] = React.useState([]);\n    const [loading, setLoading] = React.useState([true]);\n    \n    \n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n          .then(response => response.json())\n          .then(todos => {\n            setTimeout(() => {\n                setTodos(todos);\n                setLoading(false)\n            }, 2000)\n            \n        })\n    }, [])\n    \n    \n    \n    function toggleTodo(id){\n        setTodos(\n            todos.map(todo => {\n            if(todo.id === id){\n                todo.completed = !todo.completed\n            }\n            \n            return todo\n            })\n        )\n    }\n    \n    function removeTodo(id){\n        setTodos(todos.filter(todo => todo.id !== id));\n    }\n    \n    function addTodo(title){\n        setTodos(todos.concat([{\n            title,\n            id: Date.now(),\n            completed: false\n        }]))\n    }\n    \n    \n  return (\n      <Context.Provider value={ {removeTodo: removeTodo} }>\n      \n          <div className='wrapper'>\n\n          <h1>React tutorial</h1>\n            <Modal />\n      \n            <React.Suspense fallback={<p></p>}>\n                <AddTodo onCreate = {addTodo} />\n            </React.Suspense>\n      \n      \n            \n      \n            {loading && <Loader />}\n      \n            {todos.length ? \n            <TodoList todos={todos} onToggle={toggleTodo} /> \n            : (\n                loading ? null : (\n                        <p>No todos</p>\n                    )\n                )\n            }\n      \n          </div>\n      </Context.Provider>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}